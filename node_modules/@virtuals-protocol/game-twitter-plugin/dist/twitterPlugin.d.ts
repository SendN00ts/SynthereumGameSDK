import { GameFunction, GameWorker } from '@virtuals-protocol/game';
import { ITweetClient } from './interface.js';
import 'twitter-api-v2';

interface ITwitterPluginOptions {
    id?: string;
    name?: string;
    description?: string;
    twitterClient: ITweetClient;
}
declare class TwitterPlugin {
    private id;
    private name;
    private description;
    private twitterClient;
    constructor(options: ITwitterPluginOptions);
    getWorker(data?: {
        functions?: GameFunction<any>[];
        getEnvironment?: () => Promise<Record<string, any>>;
    }): GameWorker;
    getMetrics(): Promise<{
        followers: number;
        following: number;
        tweets: number;
    }>;
    get searchTweetsFunction(): GameFunction<[{
        readonly name: "query";
        readonly description: "The search query";
    }]>;
    get replyTweetFunction(): GameFunction<[{
        readonly name: "tweet_id";
        readonly description: "The tweet id";
    }, {
        readonly name: "reply";
        readonly description: "The reply content";
    }, {
        readonly name: "reply_reasoning";
        readonly description: "The reasoning behind the reply";
    }]>;
    get postTweetFunction(): GameFunction<[{
        readonly name: "tweet";
        readonly description: "The tweet content";
    }, {
        readonly name: "tweet_reasoning";
        readonly description: "The reasoning behind the tweet";
    }]>;
    get likeTweetFunction(): GameFunction<[{
        readonly name: "tweet_id";
        readonly description: "The tweet id";
    }]>;
    get quoteTweetFunction(): GameFunction<[{
        readonly name: "tweet_id";
        readonly description: "The tweet id";
    }, {
        readonly name: "quote";
        readonly description: "The quote content";
    }]>;
}

export { TwitterPlugin as default };
