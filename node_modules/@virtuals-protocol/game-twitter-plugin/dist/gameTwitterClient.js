"use strict";
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var __async = (__this, __arguments, generator) => {
  return new Promise((resolve, reject) => {
    var fulfilled = (value) => {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    };
    var rejected = (value) => {
      try {
        step(generator.throw(value));
      } catch (e) {
        reject(e);
      }
    };
    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);
    step((generator = generator.apply(__this, __arguments)).next());
  });
};

// src/gameTwitterClient.ts
var gameTwitterClient_exports = {};
__export(gameTwitterClient_exports, {
  GameTwitterClient: () => GameTwitterClient
});
module.exports = __toCommonJS(gameTwitterClient_exports);
var GameTwitterClient = class {
  constructor(credential) {
    this.baseURL = "https://twitter.game.virtuals.io/tweets";
    this.headers = {
      "x-api-key": `${credential.accessToken}`
    };
  }
  fetchAPI(endpoint, options) {
    return __async(this, null, function* () {
      const response = yield fetch(`${this.baseURL}${endpoint}`, __spreadProps(__spreadValues({}, options), {
        headers: __spreadValues({
          "Content-Type": "application/json"
        }, this.headers)
      }));
      if (!response.ok) {
        throw new Error(`Error: ${response.statusText}`);
      }
      return response.json();
    });
  }
  fetchFormData(endpoint, options) {
    return __async(this, null, function* () {
      const response = yield fetch(`${this.baseURL}${endpoint}`, __spreadProps(__spreadValues({}, options), {
        headers: this.headers
      }));
      if (!response.ok) {
        throw new Error(`Error: ${response.statusText}`);
      }
      return response.json();
    });
  }
  post(tweet, mediaIds) {
    return __async(this, null, function* () {
      return this.fetchAPI("/post", {
        method: "POST",
        body: JSON.stringify({ content: tweet, mediaIds })
      });
    });
  }
  search(query) {
    return __async(this, null, function* () {
      return this.fetchAPI(
        `/search?query=${encodeURIComponent(query)}`,
        {
          method: "GET"
        }
      );
    });
  }
  reply(tweetId, reply, mediaIds) {
    return __async(this, null, function* () {
      return this.fetchAPI(`/reply/${tweetId}`, {
        method: "POST",
        body: JSON.stringify({ content: reply, mediaIds })
      });
    });
  }
  like(tweetId) {
    return __async(this, null, function* () {
      return this.fetchAPI(`/like/${tweetId}`, {
        method: "POST"
      });
    });
  }
  quote(tweetId, quote) {
    return __async(this, null, function* () {
      return this.fetchAPI(`/quote/${tweetId}`, {
        method: "POST",
        body: JSON.stringify({ content: quote })
      });
    });
  }
  me() {
    return __async(this, null, function* () {
      return this.fetchAPI("/me", {
        method: "GET"
      });
    });
  }
  mentions(paginationToken) {
    return __async(this, null, function* () {
      let url = "/mentions";
      if (paginationToken) {
        url += `?paginationToken=${paginationToken}`;
      }
      return this.fetchAPI(url, {
        method: "GET"
      });
    });
  }
  followers(paginationToken) {
    return __async(this, null, function* () {
      let url = "/followers";
      if (paginationToken) {
        url += `?paginationToken=${paginationToken}`;
      }
      return this.fetchAPI(url, {
        method: "GET"
      });
    });
  }
  following(paginationToken) {
    return __async(this, null, function* () {
      let url = "/following";
      if (paginationToken) {
        url += `?paginationToken=${paginationToken}`;
      }
      return this.fetchAPI(url, {
        method: "GET"
      });
    });
  }
  uploadMedia(media) {
    return __async(this, null, function* () {
      const formData = new FormData();
      formData.append("file", media);
      const result = yield this.fetchFormData(`/media`, {
        method: "POST",
        body: formData
      });
      return result.mediaId;
    });
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  GameTwitterClient
});
