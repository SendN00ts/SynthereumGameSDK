import { TweetV2PostTweetResult, TweetSearchRecentV2Paginator, TweetV2LikeResult, UserV2Result, TweetUserMentionTimelineV2Paginator, UserV2TimelineResult } from 'twitter-api-v2';
import { ITweetClient, MediaIdsType } from './interface.js';

interface ICredential {
    accessToken: string;
}
declare class GameTwitterClient implements ITweetClient {
    private baseURL;
    private headers;
    constructor(credential: ICredential);
    private fetchAPI;
    private fetchFormData;
    post(tweet: string, mediaIds?: MediaIdsType): Promise<TweetV2PostTweetResult>;
    search(query: string): Promise<TweetSearchRecentV2Paginator["data"]>;
    reply(tweetId: string, reply: string, mediaIds?: MediaIdsType): Promise<TweetV2PostTweetResult>;
    like(tweetId: string): Promise<TweetV2LikeResult>;
    quote(tweetId: string, quote: string): Promise<TweetV2PostTweetResult>;
    me(): Promise<UserV2Result>;
    mentions(paginationToken?: string): Promise<TweetUserMentionTimelineV2Paginator["data"]>;
    followers(paginationToken?: string): Promise<UserV2TimelineResult>;
    following(paginationToken?: string): Promise<UserV2TimelineResult>;
    uploadMedia(media: Blob): Promise<string>;
}

export { GameTwitterClient };
